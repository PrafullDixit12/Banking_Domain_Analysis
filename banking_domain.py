# -*- coding: utf-8 -*-
"""Banking_Domain.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xefMHeYmh5NKZlTRe_tTl47pugdOVrxl
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np



df= pd.read_csv("/content/Banking.csv")
df.head(5)

df.shape

df.info()

df.describe()

bins = [0,10000,30000, float('inf')]
labels = ['Low','Med','High']

df['Income Band'] = pd.cut(df['Estimated Income'], bins=bins, labels=labels, right=False)

df['Income Band'].value_counts().plot(kind = 'bar')

#Examine the distribution of unique categories in categorical columns.
Categorical_cols = df[["BRId","GenderId","IAId","Amount of Credit Cards","Nationality","Occupation","Fee Structure","Loyalty Classification",
                       "Properties Owned","Risk Weighting","Income Band"]].columns

for col in Categorical_cols:
  print(f"value counts for '{col}':")
  display(df[col].value_counts())

# Examine the distribution of unique cataegories in categorical columns
categorical_cols = df[["BRId", "GenderId", "IAId", "Amount of Credit Cards", "Nationality", "Occupation", "Fee Structure","Loyalty Classification", "Properties Owned", "Risk Weighting", "Income Band"]].columns

for col in categorical_cols:
  print(f"Value Counts for '{col}':")
  display(df[col].value_counts())

#This code gives you a frequency count of each unique value for every selected categorical column in your DataFrame,
# making it easy to analyze the distribution of your categorical data

"""Univariate Analysis"""

for i, predictor in enumerate(df[["BRId", "GenderId", "IAId", "Amount of Credit Cards", "Nationality", "Occupation", "Fee Structure", "Loyalty Classification", "Properties Owned", "Risk Weighting", "Income Band"]].columns):
    plt.figure(i) # plt.figure(i) creates a new matplotlib figure for each plot, ensuring that each count plot appears separately.
    sns.countplot(data=df, x=predictor)

"""Bivariate analysis"""

for i, predictor in enumerate(df[["BRId", "GenderId", "IAId", "Amount of Credit Cards", "Nationality", "Occupation", "Fee Structure", "Loyalty Classification", "Properties Owned", "Risk Weighting", "Income Band"]].columns):
    plt.figure(i)
    sns.countplot(data=df, x=predictor, hue='Nationality')
    #The hue parameter in Seaborn’s countplot tells Seaborn to break down each bar
    # (for each category in predictor) by the values of another categorical variable—in this case, 'Nationality'

# HIstplot of value counts for different Occupation

for col in categorical_cols:
  if col == "Occupation":
    continue
  plt.figure(figsize=(8,4))
  sns.histplot(df[col])
  plt.title('Histogram of Occupation Count')
  plt.xlabel(col)
  plt.ylabel("Count")
  plt.show()

"""Numerical analysis"""

numerical_cols = ['Estimated Income', 'Superannuation Savings', 'Credit Card Balance', 'Bank Loans', 'Bank Deposits', 'Checking Accounts', 'Saving Accounts', 'Foreign Currency Account', 'Business Lending']

# Univariate analysis and visualization
plt.figure(figsize=(15,18.5))
for i,col in enumerate(numerical_cols):
  plt.subplot(4,3,i+1)
  sns.histplot(df[col],kde=True)
  plt.title(col)
plt.show()

"""Heatsmaps"""

numerical_cols = ['Estimated Income', 'Superannuation Savings', 'Credit Card Balance', 'Bank Loans', 'Bank Deposits', 'Checking Accounts', 'Saving Accounts', 'Foreign Currency Account', 'Business Lending']

correlation_matrix = df[numerical_cols].corr()

plt.figure(figsize=(12,12))
sns.heatmap(correlation_matrix, annot=True, cmap='crest', fmt=".2f")
plt.title("Correlation Matrix")
plt.show()

"""**Insights of EDA**

Variable Pair                    	Correlation   	Insight
Bank Deposits & Checking Accounts	 0.84	         Strongly related; likely used together
Bank Deposits & Saving Accounts	   0.75          Customers with deposits also have savings
Checking Accounts & Saving Accounts	0.46	       Moderate overlap in usage
Bank Deposits & Business Lending	0.44	         Business depositors may also borrow
Bank Loans & Business Lending	    0.42         	Loan customers often have business lending
Estimated Income & Most Products	0.26–0.37    	Income weakly to moderately influences product balances
Superannuation Savings & Others	<0.26	           Superannuation is largely     independent of other products
"""

